language: go

install:
# "Step 1 - instaling hugo"
- go get github.com/gohugoio/hugo

before_script:
# "Step 2 - cleaning website publish folder 'docs'. Keeping media intact.
- find docs -mindepth 1 -maxdepth 1 ! -name media -exec rm -rf {} \;
# "Step 3 - building the hugo site"
- hugo version
- hugo
# "Step 4 - decrypting the deploy key"
- openssl aes-256-cbc -K $encrypted_a781b6369385_key -iv $encrypted_a781b6369385_iv -in travis_blog_deploy.enc -out travis_blog_deploy -d
- chmod 600 travis_blog_deploy
# "Step 5 - adding the deploy key to the keyring"
- eval `ssh-agent -s`
- ssh-add travis_blog_deploy
- rm -f travis_blog_deploy
# "Step 6 - setting up git parameters"
- git config --global user.email "lobopraveen@gmail.com"
- git config --global user.name "travis"
# "Step 7 - commit the changes to the originating branch"
- git status
- git branch -a
- git remote -v
- git config --get remote.origin.fetch
- git show-ref --head
- git reflog
- git stash
- git fetch 
- git branch $(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi) origin/$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
- git checkout $(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
- git stash pop
- git add -A
- git commit -m "Travis deploy for $TRAVIS_COMMIT. [skip ci]"
# "Step 8 - push the changes to github"
- git remote set-url origin git@github.com:lobopraveen/praveenlobo.com.git
- git push origin
# "Successfully built and deployed the site!"

script:
# Travis is failing for no reason. Just having this stage will prevent it from failing.
- echo "Bye!"

notifications:
  email:
    on_success: change
    on_failure: always
